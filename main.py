# -*- coding: utf-8 -*-
from config.config import URL, BOT_TOKEN
import datetime
import asyncio
import logging
from datetime import datetime
from aiogram import Bot, types, Dispatcher
from aiogram.filters import CommandStart, Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import requests

bot = Bot(token=BOT_TOKEN)

dp = Dispatcher()

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –æ–¥–∏–Ω —Ä–∞–∑ (–≥–ª–æ–±–∞–ª—å–Ω–æ)
weather_kb = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É üå§Ô∏è")]],
    resize_keyboard=True,
    persistent=True  # –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
)


# ========== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ==================
# ========== –§—É–Ω–∫—Ü–∏—è —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è –≤–µ—Ç—Ä–∞ –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è ==
response = requests.get(URL)
wthr = response.json()
wind_dir = wthr.get('wind', {}).get('deg')



def get_wind_direction(wind_dir):
    directions = {
        (0, 24): "–°–µ–≤–µ—Ä–Ω—ã–π",
        (25, 64): "–°–µ–≤–µ—Ä–æ-–í–æ—Å—Ç–æ—á–Ω—ã–π",
        (65, 114): "–í–æ—Å—Ç–æ—á–Ω—ã–π",
        (115, 154): "–Æ–≥–æ-–í–æ—Å—Ç–æ—á–Ω—ã–π",
        (155, 204): "–Æ–∂–Ω—ã–π",
        (205, 244): "–Æ–≥–æ-–ó–∞–ø–∞–¥–Ω—ã–π",
        (245, 294): "–ó–∞–ø–∞–¥–Ω—ã–π",
        (295, 334): "–°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω—ã–π",
        (335, 360): "–°–µ–≤–µ—Ä–Ω—ã–π"
    }
    for (min_deg, max_deg), direction in directions.items():
        if min_deg <= wind_dir <= max_deg:
            return direction
    return "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"


# ======== –§–£–ù–ö–¶–ò–Ø –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –¢–†–ê–ù–°–ü–û–†–¢–ê ==================

def isAuto(wind_direction_str):
    if wind_direction_str in ("–°–µ–≤–µ—Ä–Ω—ã–π", "–°–µ–≤–µ—Ä–æ-–í–æ—Å—Ç–æ—á–Ω—ã–π", "–í–æ—Å—Ç–æ—á–Ω—ã–π", "–°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω—ã–π", "–ó–∞–ø–∞–¥–Ω—ã–π"):
        transport = "–Ω–∞ –º–∞—à–∏–Ω–µ"
        return (transport)
    else:
        transport = "–Ω–∞ –∞–≤—Ç–æ–±—É—Å–µ"
        return transport

#======== –§–£–ù–ö–¶–ò–Ø –î–û–ë–ê–í–õ–ï–ù–ò–Ø –ò–ö–û–ù–ö–ò –ü–û–ì–û–î–´ ==================
def get_weather_emoji(icon_code):
    emoji_map = {
        "01d": "‚òÄÔ∏è",  # —è—Å–Ω–æ (–¥–µ–Ω—å)
        "01n": "üåô",  # —è—Å–Ω–æ (–Ω–æ—á—å)
        "02d": "‚õÖ",  # –º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ (–¥–µ–Ω—å)
        "02n": "‚õÖ",  # –º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ (–Ω–æ—á—å)
        "03d": "‚òÅÔ∏è",  # –æ–±–ª–∞—á–Ω–æ
        "03n": "‚òÅÔ∏è",
        "04d": "‚òÅÔ∏è",  # –ø–∞—Å–º—É—Ä–Ω–æ
        "04n": "‚òÅÔ∏è",
        "09d": "üåßÔ∏è",  # –¥–æ–∂–¥—å
        "09n": "üåßÔ∏è",
        "10d": "üå¶Ô∏è",  # –¥–æ–∂–¥—å —Å —Å–æ–ª–Ω—Ü–µ–º
        "10n": "üåßÔ∏è",
        "11d": "‚õàÔ∏è",  # –≥—Ä–æ–∑–∞
        "11n": "‚õàÔ∏è",
        "13d": "‚ùÑÔ∏è",  # —Å–Ω–µ–≥
        "13n": "‚ùÑÔ∏è",
        "50d": "üå´Ô∏è",  # —Ç—É–º–∞–Ω
        "50n": "üå´Ô∏è"
    }
    return emoji_map.get(icon_code, "‚ùì")  # –µ—Å–ª–∏ –∫–æ–¥ –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω ‚Üí "‚ùì"

# ========== –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò =========================
# ========== –ü–†–ò–í–ï–¢–°–¢–í–ï–ù–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï =================
@dp.message(CommandStart())
async def handle_start(message: types.Message):
    await message.answer(
        text=f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø –±–æ—Ç, –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—é—â–∏–π —Ç–µ–±–µ –Ω–∞ —á–µ–º —Å–µ–≥–æ–¥–Ω—è –ª—É—á—à–µ –¥–æ–±—Ä–∞—Ç—å—Å—è –¥–æ —Ñ–æ—Å—Ñ–æ—Ä–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞ –ê–û "–ê–ø–∞—Ç–∏—Ç"\U0001F698\U0001F68C,—á—Ç–æ –±—ã –õ–ö–ü —Ç–≤–æ–µ–≥–æ –∞–≤—Ç–æ –Ω–µ –ø–æ—Å—Ç—Ä–∞–¥–∞–ª–æ \U0001F327.',
        reply_markup=weather_kb
    )

# =========== –û–¢–í–ï–¢ –ù–ê –ö–û–ú–ê–ù–î–£ HELP ==================
@dp.message(Command('help'))
async def handle_start(message: types.Message):
    await message.answer(
        text=f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}, –ø–æ –≤—Å–µ–º –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–º –≤–æ–ø—Ä–æ—Å–∞–º –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –±–æ—Ç–∞ –Ω–∞–ø–∏—à–∏ –≤ –¢–ì @EO_Kvashnin'
    )

# ========== –û–ë–†–ê–ë–û–¢–ö–ê –û–¢–í–ï–¢–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ===============

@dp.message()
async def get_wheather(message: types.Message):

    # === –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API ===
    response = requests.get(URL)
    wthr = response.json()

    now = datetime.now()

    # === —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è –≥—Ä–∞–¥—É—Å–æ–≤ –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ—Ç—Ä–∞ ===
    wind_direction = get_wind_direction(wind_dir)
    transport = isAuto(wind_direction)

    code_to_smile = {
        '–Æ–∂–Ω—ã–π': chr(0x2B06),
        '–°–µ–≤–µ—Ä–æ-–í–æ—Å—Ç–æ—á–Ω—ã–π': chr(0x2199),
        '–°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω—ã–π': chr(0x2198),
        '–Æ–≥–æ-–í–æ—Å—Ç–æ—á–Ω—ã–π': chr(0x2196),
        '–í–æ—Å—Ç–æ—á–Ω—ã–π': chr(0x2B05),
        '–Æ–≥–æ-–ó–∞–ø–∞–¥–Ω—ã–π': chr(0x2197),
        '–ó–∞–ø–∞–¥–Ω—ã–π': chr(0x27A1),
        '–°–µ–≤–µ—Ä–Ω—ã–π': chr(0x2B07)
    }

    predlog = ''
    smile = ''
    wind_smile = ''
    sticker_s = ''
    car_emoji = '\U0001F698'
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∑–∞–ø–∏—Å–µ–π
        if wthr.get('cod') == 200:

            currentDate = now.strftime("%d.%m.%Y %H:%M")
            wind_speed = wthr.get('wind', {}).get('speed')
            city = "–ß–µ—Ä–µ–ø–æ–≤–µ—Ü"
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –∏ –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ —Ü–µ–ª–æ–≥–æ
            temp_c = round(float(wthr.get('main', {}).get('temp'))) if wthr.get('main', {}).get('temp') is not None else '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
            # –ü–æ–ª—É—á–∞–µ–º –∏–∫–æ–Ω–∫—É –ø–æ–≥–æ–¥—ã
            weather_icon = wthr.get("weather", [{}])[0].get("icon", "")
            weather_emoji = get_weather_emoji(weather_icon)


            if wind_direction in code_to_smile:
                wind_smile = code_to_smile[wind_direction]
            else:
                wind_smile = '\U0001F937'

            if transport == '–Ω–∞ –º–∞—à–∏–Ω–µ':
                predlog = '–º–æ–∂–Ω–æ'
                sticker_s = 'CAACAgUAAxkBAAENVy5nYbcDZNian3GjIKWMjST9mKWfYgAC8gIAAq2uOFebuWyag2LaBjYE'
                smile = '\U0001F6A6\U0001F698'
            else:
                predlog = '–ª—É—á—à–µ'
                sticker_s = 'CAACAgUAAxkBAAENVyJnYbWosMBxG3jmuD48s3GXswPLbwACqQMAAukKyANqmZZeaEc9pDYE'
                smile = '\U0001F68C\U0001F3C3'

                # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
                # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
                loading_message_1 = await message.reply('–ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ –∏—Å—Ç–æ—á–Ω–∏–∫—É \U0001F9D0')
                await asyncio.sleep(1.5)
                loading_message_2 = await message.answer(text='–ó–∞–≥—Ä—É–∂–∞—é –æ—Ç–≤–µ—Ç \U0001F4AD')
                await asyncio.sleep(1.5)
                await bot.delete_message(chat_id=message.chat.id, message_id=loading_message_1.message_id)
                await bot.delete_message(chat_id=message.chat.id, message_id=loading_message_2.message_id)
                await message.answer(
                    text=f'***{city}***\n'
                         f'–ü–æ–≥–æ–¥–∞ –Ω–∞ {currentDate} {weather_emoji}\n'
                         f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_c} ‚ÑÉ\n'
                         f'\n'
                         f'{car_emoji * 13}\n'
                         f'B–µ—Ç–µ—Ä  {wind_smile * 3} {wind_direction} {wind_speed} –º/—Å\n'
                         f'\n'
                         f'{predlog} {transport} {smile}',
                        reply_markup=weather_kb

                )
                await asyncio.sleep(3)
                sticker_message = await bot.send_sticker(chat_id=message.chat.id, sticker=sticker_s)
                await asyncio.sleep(5)
                # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è

                await bot.delete_message(chat_id=message.chat.id, message_id=sticker_message.message_id)
        else:
            await message.reply("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.")

    except:
        await message.reply(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")




async def main():
    logging.basicConfig(level=logging.DEBUG)  # –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
